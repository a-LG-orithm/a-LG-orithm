name: Move BaekjoonHub Files #워크 플로우 이름

on: # 워크플로우가 실행될 이벤트들
  push:
    branches:
      - main  # main 브랜치에 Push 시 실행

jobs: # 워크플로우에서 실행할 작업들
  move: # 작업 이름
    runs-on: ubuntu-latest # 실행 환경(OS)

    steps: # 작업 내에서 실행될 단계들
      # Checkout repository
      - name: Checkout repository # 단계 이름
        uses: actions/checkout@v3 # 액션 사용: 리포지토리 체크아웃, 현재 리포지토리 소스 코드를 가져오도록 설정

      # GitHub 사용자 정보 설정
      - name: Set GitHub user info
        run: |
          git config --local user.name "${{ secrets.USER_NAME }}" # 본인 성명
          git config --local user.email "${{ secrets.USER_EMAIL }}" #본인 이메일

      # config user.name 환경 변수 설정
      - name: Fetch Git user.name
        id: fetch_user_name
        run: |
          USER_NAME=$(git config --get user.name)
          echo "USER_NAME=${USER_NAME}" >> $GITHUB_ENV

      # 디렉토리 생성 및 파일 이동
      - name: Create directories and move files
        run: |
          
          # 디렉토리 경로 설정
          PROGRAMMERS_DIR="Programmers/${USER_NAME}"
          BAEKJOON_DIR="Beakjoon/${USER_NAME}"

          # 디렉토리 생성
          mkdir -p "$PROGRAMMERS_DIR"
          mkdir -p "$BAEKJOON_DIR"

          # Programmers 문제 처리
          for folder in ./프로그래머스/*/*; do                # ex)./프로그래머스/레벨1/42885. 구명보트
            if [ -d "$folder" ]; then                        # folder가 디렉토리인지 확인합니다.
              # 폴더 이름 추출 (예: 42885. 구명보트)
              folder_name=$(basename "$folder")
              echo "찾은 폴더: $folder"
              if [[ "$folder_name" =~ ^[0-9]+\. ]]; then     # 정규 표현식을 사용해 폴더 이름이 숫자로 시작하고, 뒤에 마침표(.)가 있는지 확인합니다.
                # 새로운 디렉토리 경로 생성
                new_directory="$PROGRAMMERS_DIR/${folder_name}"
                
                # 기존 디렉토리가 존재하면 삭제
                if [ -d "$new_directory" ]; then
                  rm -rf "$new_directory"
                  echo "기존 디렉토리 삭제: $new_directory"
                fi
          
                # 폴더 이동
                mv "$folder" "$new_directory"
                echo "폴더 이동 완료: $folder -> $new_directory"
          
                #문제 이름 
                echo "LATEST_FOLDER_NAME=${folder_name}" >> $GITHUB_ENV
              fi
            fi
          done

          # Baekjoon 문제 처리
          for file in ./백준/*; do
            if [ -f "$file" ]; then
              # 파일 이름 추출 (문제 번호 및 이름)
              problem_number=$(basename "$file" .java | cut -d'_' -f2)
              problem_name=$(basename "$file" .java | cut -d'_' -f3-)

              # 새로운 디렉토리 경로 생성
              new_directory="$BAEKJOON_DIR/${problem_number}-${problem_name}"

              # 기존 디렉토리가 존재하면 삭제
              if [ -d "$new_directory" ]; then
                rm -rf "$new_directory"
                echo "기존 디렉토리 삭제: $new_directory"
              fi
          
              # 파일 이동
              mv "$file" "$new_directory.java"
              echo "파일 이동 완료: $file -> $new_directory.java"
            fi
          done

      # Git 커밋 및 푸시
      - name: Push changes
        run: |
          git add .
          if git diff-index --quiet HEAD; then # 현재 HEAD와 스테이징된 파일의 차이를 확인합니다.
            echo "No changes to commit."
          else
            git commit -m "COMMITTED BY ${USER_NAME}: Processed ${LATEST_FOLDER_NAME}"
            git push
          fi
